FROM wordpress:4.9.4-php7.2-apache

# install composer
RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php -r "if (print hash_file('SHA384', 'composer-setup.php') ===  file_get_contents('https://composer.github.io/installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
    php composer-setup.php --install-dir=/usr/local/bin --filename=composer && \
    php -r "unlink('composer-setup.php');"

# install wordpress cli
# https://github.com/KaiHofstetter/docker-wordpress-cli/blob/master/Dockerfile
RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && \
    chmod +x wp-cli.phar && \
    mv wp-cli.phar /usr/local/bin/wp

#Installing GOSU
ENV GOSU_VERSION 1.10
RUN set -ex; \
  \
  fetchDeps=' \
    wget \
  '; \
  apt-get update; \
  apt-get install -y --no-install-recommends $fetchDeps; \
  rm -rf /var/lib/apt/lists/*; \
  \
  dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"; \
  wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"; \
  \
  chmod +x /usr/local/bin/gosu; \
# verify that the binary works
  gosu nobody true

#libpng-dev: needed to install laravel frontend npm dependencies
#dos2unix to convert script from DOS format to the Unix. Otherwise we'll have bugs when running containers on Windows
RUN apt-get update; \
  apt-get install -y zip unzip netcat libpng-dev dos2unix



#TO-Do: Install SAGE dependencies

ENV NODE_VERSION 8.9.4
RUN ARCH= && dpkgArch="$(dpkg --print-architecture)" \
  && case "${dpkgArch##*-}" in \
    amd64) ARCH='x64';; \
    ppc64el) ARCH='ppc64le';; \
    s390x) ARCH='s390x';; \
    arm64) ARCH='arm64';; \
    armhf) ARCH='armv7l';; \
    i386) ARCH='x86';; \
    *) echo "unsupported architecture"; exit 1 ;; \
  esac \
  && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz" \
  && curl -SLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt" \
  && grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
  && tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1 --no-same-owner \
  && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt \
  && ln -s /usr/local/bin/node /usr/local/bin/nodejs \
  && npm install -g webpack@3.10.0

ENV YARN_VERSION 1.3.2
RUN set -ex \
  && curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz" \
  && mkdir -p /opt/yarn \
  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \
  && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \
  && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \
  && rm yarn-v$YARN_VERSION.tar.gz


ENV APP_PATH /var/www/html

WORKDIR $APP_PATH

# set folder permissions
RUN chown -R www-data:www-data /var/www && chmod g+s .

ENTRYPOINT ["docker-php-entrypoint"]

COPY 05-wordpress/*.sh /opt/
COPY 10-bedrock/*.sh /opt/
COPY 15-sage/*.sh /opt/
COPY 20-laravel/*.sh /opt/
RUN chmod +x /opt/*.sh \
  && dos2unix /opt/*.sh

COPY 00-apache/apache-sites.conf /etc/apache2/sites-available/000-default.conf
COPY 00-apache/apache-ports.conf /etc/apache2/ports.conf

CMD /opt/init.sh && exec apache2-foreground








